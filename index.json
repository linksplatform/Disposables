{
  "README.html": {
    "href": "README.html",
    "title": "Disposables (русская версия) | LinksPlatform's Platform.Disposables Library",
    "keywords": "Disposables ( русская версия ) This library helps to make objects disposable in a fast, short, easy and safe way. Platform.Disposables.DisposableBase abstract class tries to dispose the object at both on instance destruction and OnProcessExit whatever comes first even if Dispose method was not called anywhere by user. And takes care your disposal logic executes only once by default, and if you really need it, you can allow multiple calls and attempts to dispose, by overriding corresponding properties. The Platform.Disposables.IDisposable interface extends the System.IDisposable with IsDisposed property and Destruct method. The Destruct method is designed to never throw exceptions, that makes it safe to use in class destructors. All ignored exceptions are available at Platform.Exceptions.IgnoredExceptions if you need to debug them. Namespace: Platform.Disposables Forked from: Konard/LinksPlatform/Platform/Platform.Helpers/Disposables Package at NuGet: Platform.Disposables Examples If you can use inheritance in your class. For example if you don't have other base class inherited. using Platform.Disposables; namespace Examples { public class DisposableBaseUsageExample : DisposableBase { protected override void Dispose(bool manual, bool wasDisposed) { // Dispose logic } } } If you cannot use inheritance in your class. For example if you have other base class inherited. using Platform.Disposables; namespace Examples { public class DisposableUsageExample : System.IDisposable { private readonly Disposable _disposable; public DisposableUsageExample() => _disposable = new Disposable(Disposed); public void Dispose() => _disposable.Dispose(); ~DisposableUsageExample() => _disposable.Destruct(); private void Disposed(bool manual, bool wasDisposed) { // Dispose logic } } } If you do not have access to the internal structure of the object's class. You can use a disposable object container. The container is convertible back to the passed object at any time. using Platform.Disposables; namespace Examples { public class Examples { public static void UseAndDispose() { var array = new int[] { 1, 2, 3 }; Disposable<int[]> disposableArray = (array, () => array = null); WorkWithObjectAndDispose(disposableArray); // Here array == null } private static void WorkWithObjectAndDispose(Disposable<int[]> disposableArray) { using (disposableArray) { int[] array = disposableArray; // Use your object here } // Here there is call to () => array = null } } } Documentation Interface IDisposable . Abstract class DisposableBase . Class Disposable . PDF file with code for e-readers. Depend on Platform.Exceptions Mystery files .travis.yml - Travis CI build configuration. docfx.json and toc.yml - DocFX build configuration. fvextra.sty - package required for LaTeX document generation. fmt.sh - script for formating tex file for generating PDF from it. fmt.py - script for formating single .cs file as a part of tex file. Makefile - PDF build configuration. generate-pdf.sh - script that generates PDF with code for e-readers. publish-docs.sh - script that publishes generated documentation and PDF with code for e-readers to gh-pages branch. push-nuget.bat - Windows script for publishing current version of NuGet package."
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "Disposables (english version) | LinksPlatform's Platform.Disposables Library",
    "keywords": "Disposables ( english version ) Эта библиотека помогает сделать объекты высвобождаемыми быстрым, коротким, простым и безопасным способом. Абстрактный класс Platform.Disposables.DisposableBase пытается удалить объект, даже если метод Dispose нигде не вызывался пользователем, любо при вызове деструктора экземпляра, либо при возникновении события OnProcessExit , в зависимости от того, что произойдет раньше. И позаботится о том, чтобы логика удаления по умолчанию выполнялась только один раз, но, если она вам действительно нужна, вы можете разрешить несколько вызовов и попыток удаления, переопределив соответствующие свойства. Интерфейс Platform.Disposables.IDisposable расширяет System.IDisposable добавляя свойство IsDisposed и метод Destruct . Метод Destruct предназначен для того, чтобы не генерировать исключения, что делает его безопасным для использования в деструкторах классов. Все игнорируемые исключения доступны в Platform.Exceptions.IgnoredExceptions , если вам нужно их отладить. Пространство имён: Platform.Disposables Ответвление от: Konard/LinksPlatform/Platform/Platform.Helpers/Disposables Пакет в NuGet: Platform.Disposables Примеры Если вы можете использовать наследование в вашем классе. Например, если у вас нет другого наследуемого базового класса. using Platform.Disposables; namespace Examples { public class DisposableBaseUsageExample : DisposableBase { protected override void Dispose(bool manual, bool wasDisposed) { // Логика высвобождения } } } Если вы не можете использовать наследование в вашем классе. Например, если у вас есть другой базовый класс от которого унаследован ваш класс. using Platform.Disposables; namespace Examples { public class DisposableUsageExample : System.IDisposable { private readonly Disposable _disposable; public DisposableUsageExample() => _disposable = new Disposable(Disposed); public void Dispose() => _disposable.Dispose(); ~DisposableUsageExample() => _disposable.Destruct(); private void Disposed(bool manual, bool wasDisposed) { // Логика высвобождения } } } Если у вас нет доступа к внутренней структуре класса объекта. Вы можете использовать высвобождаемый контейнер для вашего объекта. Контейнер может быть преобразован обратно в переданный объект в любое время. using Platform.Disposables; namespace Examples { public class Examples { public static void UseAndDispose() { var array = new int[] { 1, 2, 3 }; Disposable<int[]> disposableArray = (array, () => array = null); WorkWithObjectAndDispose(disposableArray); // Здесь array == null } private static void WorkWithObjectAndDispose(Disposable<int[]> disposableArray) { using (disposableArray) { int[] array = disposableArray; // Используйте ваш объект здесь } // Здесь вызывается () => array = null } } } Документация Интерфейс IDisposable . Абстрактный класс DisposableBase . Класс Disposable . PDF файл с кодом для электронных книг. Зависит от Platform.Exceptions Загадочные файлы .travis.yml - конфигурация сборки Travis CI. docfx.json and toc.yml - конфигурация сборки DocFX. fvextra.sty - пакет, необходимый для генерации документов LaTeX. fmt.sh - скрипт для форматирования tex файла для генерации PDF из него. fmt.py - скрипт для форматирования одного файла .cs как части файла tex . Makefile - конфигурация сборки PDF. generate-pdf.sh - скрипт, который генерирует PDF с кодом для электронных книг. publish-docs.sh - скрипт, который публикует сгенерированную документацию и PDF с кодом для электронных книг в ветку gh-pages . push-nuget.bat - Windows-скрипт для публикации текущей версии пакета NuGet."
  },
  "api/Platform.Disposables.Disposable-2.html": {
    "href": "api/Platform.Disposables.Disposable-2.html",
    "title": "Class Disposable<TPrimary, TAuxiliary> | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable<TPrimary, TAuxiliary> Represents disposable container that disposes two contained objects when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает два содержащийхся в нём объектов при высвобождении самого контейнера. Inheritance Object DisposableBase Disposable Disposable <TPrimary> Disposable<TPrimary, TAuxiliary> Implements IDisposable IDisposable Inherited Members Disposable<TPrimary>.Object Disposable.OnDispose Disposable.RaiseOnDisposeEvent(Boolean, Boolean) Disposable.TryDisposeAndResetToDefault<T>(T) DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable<TPrimary, TAuxiliary> : Disposable<TPrimary>, IDisposable, IDisposable Type Parameters Name Description TPrimary TAuxiliary Constructors | Improve this Doc View Source Disposable(TPrimary) Declaration public Disposable(TPrimary object) Parameters Type Name Description TPrimary object | Improve this Doc View Source Disposable(TPrimary, TAuxiliary) Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject) Parameters Type Name Description TPrimary object TAuxiliary auxiliaryObject | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Disposal) Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Disposal disposal) Parameters Type Name Description TPrimary object TAuxiliary auxiliaryObject Disposal disposal | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Action) Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Action action) Parameters Type Name Description TPrimary object TAuxiliary auxiliaryObject Action action | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>) Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Action<TPrimary, TAuxiliary> action) Parameters Type Name Description TPrimary object TAuxiliary auxiliaryObject Action <TPrimary, TAuxiliary> action Properties | Improve this Doc View Source AuxiliaryObject Declaration public TAuxiliary AuxiliaryObject { get; } Property Value Type Description TAuxiliary Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed Overrides Platform.Disposables.Disposable<TPrimary>.Dispose(System.Boolean, System.Boolean) Operators | Improve this Doc View Source Implicit(Disposable<TPrimary, TAuxiliary> to TPrimary) Declaration public static implicit operator TPrimary(Disposable<TPrimary, TAuxiliary> disposableContainer) Parameters Type Name Description Disposable <TPrimary, TAuxiliary> disposableContainer Returns Type Description TPrimary | Improve this Doc View Source Implicit(Disposable<TPrimary, TAuxiliary> to TAuxiliary) Declaration public static implicit operator TAuxiliary(Disposable<TPrimary, TAuxiliary> disposableContainer) Parameters Type Name Description Disposable <TPrimary, TAuxiliary> disposableContainer Returns Type Description TAuxiliary | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Disposal) to Disposable<TPrimary, TAuxiliary>) Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Disposal)tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Disposal > tuple Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>) to Disposable<TPrimary, TAuxiliary>) Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>)tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Action <TPrimary, TAuxiliary>> tuple Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Action) to Disposable<TPrimary, TAuxiliary>) Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Action)tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Action > tuple Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary) to Disposable<TPrimary, TAuxiliary>) Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary)tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary> tuple Returns Type Description Disposable <TPrimary, TAuxiliary> Implements IDisposable System.IDisposable Extension Methods DisposableBaseExtensions.DisposeIfNotDisposed(DisposableBase) GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.IDisposable.html": {
    "href": "api/Platform.Disposables.IDisposable.html",
    "title": "Interface IDisposable | LinksPlatform's Platform.Disposables Library",
    "keywords": "Interface IDisposable Представляет расширенный интерфейс IDisposable. Represents an extended IDisposable interface. Inherited Members IDisposable.Dispose() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public interface IDisposable : IDisposable Properties | Improve this Doc View Source IsDisposed Gets a value indicating whether the object was disposed. Возвращает значение определяющее был ли высвобожден объект. Declaration bool IsDisposed { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Destruct() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources without throwing any exceptions. Выполняет определенные пользователем задачи, связанные с освобождением, высвобождением или сбросом неуправляемых ресурсов без выбрасывания исключений. Declaration void Destruct() Remarks Should be called only from classes destructors, or in case exceptions should be not thrown. Должен вызываться только из деструкторов классов, или в случае, если исключения выбрасывать нельзя. Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.GenericObjectExtensions.html": {
    "href": "api/Platform.Disposables.GenericObjectExtensions.html",
    "title": "Class GenericObjectExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class GenericObjectExtensions Inheritance Object GenericObjectExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class GenericObjectExtensions Methods | Improve this Doc View Source DisposeIfPossible<T>(T) Declaration public static void DisposeIfPossible<T>(this T object) Parameters Type Name Description T object Type Parameters Name Description T | Improve this Doc View Source TryDispose<T>(T) Declaration public static bool TryDispose<T>(this T object) Parameters Type Name Description T object Returns Type Description Boolean Type Parameters Name Description T"
  },
  "api/Platform.Disposables.Disposable-1.html": {
    "href": "api/Platform.Disposables.Disposable-1.html",
    "title": "Class Disposable<T> | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable<T> Represents disposable container that disposes contained object when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает содержащийся в нём объект при высвобождении самого контейнера. Inheritance Object DisposableBase Disposable Disposable<T> Disposable<TPrimary, TAuxiliary> Implements IDisposable IDisposable Inherited Members Disposable.OnDispose Disposable.RaiseOnDisposeEvent(Boolean, Boolean) Disposable.TryDisposeAndResetToDefault<T>(T) DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable<T> : Disposable, IDisposable, IDisposable Type Parameters Name Description T Constructors | Improve this Doc View Source Disposable(T) Declaration public Disposable(T object) Parameters Type Name Description T object | Improve this Doc View Source Disposable(T, Disposal) Declaration public Disposable(T object, Disposal disposed) Parameters Type Name Description T object Disposal disposed | Improve this Doc View Source Disposable(T, Action) Declaration public Disposable(T object, Action disposed) Parameters Type Name Description T object Action disposed | Improve this Doc View Source Disposable(T, Action<T>) Declaration public Disposable(T object, Action<T> disposed) Parameters Type Name Description T object Action <T> disposed Properties | Improve this Doc View Source Object Declaration public T Object { get; } Property Value Type Description T Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed Overrides Disposable.Dispose(Boolean, Boolean) Operators | Improve this Doc View Source Implicit(T to Disposable<T>) Declaration public static implicit operator Disposable<T>(T object) Parameters Type Name Description T object Returns Type Description Disposable <T> | Improve this Doc View Source Implicit(Disposable<T> to T) Declaration public static implicit operator T(Disposable<T> disposable) Parameters Type Name Description Disposable <T> disposable Returns Type Description T | Improve this Doc View Source Implicit((T, Disposal) to Disposable<T>) Declaration public static implicit operator Disposable<T>((T, Disposal)tuple) Parameters Type Name Description ValueTuple <T, Disposal > tuple Returns Type Description Disposable <T> | Improve this Doc View Source Implicit((T, Action<T>) to Disposable<T>) Declaration public static implicit operator Disposable<T>((T, Action<T>)tuple) Parameters Type Name Description ValueTuple <T, Action <T>> tuple Returns Type Description Disposable <T> | Improve this Doc View Source Implicit((T, Action) to Disposable<T>) Declaration public static implicit operator Disposable<T>((T, Action)tuple) Parameters Type Name Description ValueTuple <T, Action > tuple Returns Type Description Disposable <T> Implements IDisposable System.IDisposable Extension Methods DisposableBaseExtensions.DisposeIfNotDisposed(DisposableBase) GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.Disposal.html": {
    "href": "api/Platform.Disposables.Disposal.html",
    "title": "Delegate Disposal | LinksPlatform's Platform.Disposables Library",
    "keywords": "Delegate Disposal Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public delegate void Disposal(bool manual, bool wasDisposed); Parameters Type Name Description Boolean manual Boolean wasDisposed Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.html": {
    "href": "api/Platform.Disposables.html",
    "title": "Namespace Platform.Disposables | LinksPlatform's Platform.Disposables Library",
    "keywords": "Namespace Platform.Disposables Classes Disposable Represents disposable object that contains OnDispose event which is raised when the object itself is disposed. Представляет высвобождаемый объект, который содержит событие OnDispose, которое возникает при высвобождении самого объекта. Disposable<T> Represents disposable container that disposes contained object when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает содержащийся в нём объект при высвобождении самого контейнера. Disposable<TPrimary, TAuxiliary> Represents disposable container that disposes two contained objects when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает два содержащийхся в нём объектов при высвобождении самого контейнера. DisposableBase Provides a base implementation for IDisposable interface with the basic logic necessary to increase the likelihood of correct unmanaged resources release. Предоставляет базовую реализацию для интерфейса IDisposable с основной логикой необходимой для повышения вероятности корректного высвобождения неуправляемых ресурсов. DisposableBaseExtensions EnsureExtensions GenericObjectExtensions Interfaces IDisposable Представляет расширенный интерфейс IDisposable. Represents an extended IDisposable interface. Delegates Disposal"
  },
  "api/Platform.Disposables.DisposableBase.html": {
    "href": "api/Platform.Disposables.DisposableBase.html",
    "title": "Class DisposableBase | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class DisposableBase Provides a base implementation for IDisposable interface with the basic logic necessary to increase the likelihood of correct unmanaged resources release. Предоставляет базовую реализацию для интерфейса IDisposable с основной логикой необходимой для повышения вероятности корректного высвобождения неуправляемых ресурсов. Inheritance Object DisposableBase Disposable Implements IDisposable IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public abstract class DisposableBase : IDisposable, IDisposable Constructors | Improve this Doc View Source DisposableBase() Declaration protected DisposableBase() Properties | Improve this Doc View Source AllowMultipleDisposeAttempts Declaration protected virtual bool AllowMultipleDisposeAttempts { get; } Property Value Type Description Boolean | Improve this Doc View Source AllowMultipleDisposeCalls Declaration protected virtual bool AllowMultipleDisposeCalls { get; } Property Value Type Description Boolean | Improve this Doc View Source IsDisposed Declaration public bool IsDisposed { get; } Property Value Type Description Boolean | Improve this Doc View Source ObjectName Declaration protected virtual string ObjectName { get; } Property Value Type Description String Methods | Improve this Doc View Source Destruct() Declaration public void Destruct() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected abstract void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements IDisposable System.IDisposable Extension Methods DisposableBaseExtensions.DisposeIfNotDisposed(DisposableBase) GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.Disposable.html": {
    "href": "api/Platform.Disposables.Disposable.html",
    "title": "Class Disposable | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable Represents disposable object that contains OnDispose event which is raised when the object itself is disposed. Представляет высвобождаемый объект, который содержит событие OnDispose, которое возникает при высвобождении самого объекта. Inheritance Object DisposableBase Disposable Disposable<T> Implements IDisposable IDisposable Inherited Members DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable : DisposableBase, IDisposable, IDisposable Constructors | Improve this Doc View Source Disposable() Declaration public Disposable() | Improve this Doc View Source Disposable(Disposal) Declaration public Disposable(Disposal disposed) Parameters Type Name Description Disposal disposed | Improve this Doc View Source Disposable(Action) Declaration public Disposable(Action disposed) Parameters Type Name Description Action disposed Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed Overrides DisposableBase.Dispose(Boolean, Boolean) | Improve this Doc View Source RaiseOnDisposeEvent(Boolean, Boolean) Declaration protected void RaiseOnDisposeEvent(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed | Improve this Doc View Source TryDisposeAndResetToDefault<T>(ref T) Declaration public static bool TryDisposeAndResetToDefault<T>(ref T object) Parameters Type Name Description T object Returns Type Description Boolean Type Parameters Name Description T Events | Improve this Doc View Source OnDispose Declaration public event Disposal OnDispose Event Type Type Description Disposal Operators | Improve this Doc View Source Implicit(Disposal to Disposable) Declaration public static implicit operator Disposable(Disposal disposal) Parameters Type Name Description Disposal disposal Returns Type Description Disposable | Improve this Doc View Source Implicit(Action to Disposable) Declaration public static implicit operator Disposable(Action action) Parameters Type Name Description Action action Returns Type Description Disposable Implements IDisposable System.IDisposable Extension Methods DisposableBaseExtensions.DisposeIfNotDisposed(DisposableBase) GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.DisposableBaseExtensions.html": {
    "href": "api/Platform.Disposables.DisposableBaseExtensions.html",
    "title": "Class DisposableBaseExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class DisposableBaseExtensions Inheritance Object DisposableBaseExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class DisposableBaseExtensions Methods | Improve this Doc View Source DisposeIfNotDisposed(DisposableBase) Declaration public static void DisposeIfNotDisposed(this DisposableBase disposable) Parameters Type Name Description DisposableBase disposable"
  },
  "api/Platform.Disposables.EnsureExtensions.html": {
    "href": "api/Platform.Disposables.EnsureExtensions.html",
    "title": "Class EnsureExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class EnsureExtensions Inheritance Object EnsureExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class EnsureExtensions Methods | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable) Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root IDisposable disposable | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable, String) Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable, string objectName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root IDisposable disposable String objectName | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable, String, String) Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable, string objectName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureAlwaysExtensionRoot root IDisposable disposable String objectName String message | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable) Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root IDisposable disposable | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable, String) Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable, string objectName) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root IDisposable disposable String objectName | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable, String, String) Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable, string objectName, string message) Parameters Type Name Description Platform.Exceptions.ExtensionRoots.EnsureOnDebugExtensionRoot root IDisposable disposable String objectName String message"
  }
}