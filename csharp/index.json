{
  "api/Platform.Disposables.Disposable.html": {
    "href": "api/Platform.Disposables.Disposable.html",
    "title": "Class Disposable | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable Represents disposable object that contains OnDispose event which is raised when the object itself is disposed. Представляет высвобождаемый объект, который содержит событие OnDispose, которое возникает при высвобождении самого объекта. Inheritance Object DisposableBase Disposable Disposable<T> Implements IDisposable IDisposable Inherited Members DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() DisposableBase.Dispose(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable : DisposableBase, IDisposable, IDisposable Constructors | Improve this Doc View Source Disposable() Initializes a new instance of the Disposable object. Инициализирует новый экземпляр объекта Disposable . Declaration public Disposable() | Improve this Doc View Source Disposable(Disposal) Initializes a new instance of the Disposable object. Инициализирует новый экземпляр объекта Disposable . Declaration public Disposable(Disposal disposal) Parameters Type Name Description Disposal disposal The Disposal delegate. Делегат Disposal . | Improve this Doc View Source Disposable(Action) Initializes a new instance of the Disposable object. Инициализирует новый экземпляр объекта Disposable . Declaration public Disposable(Action action) Parameters Type Name Description Action action The Action delegate. Делегат Action . Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes unmanaged resources. Высвобождает неуправляемые ресурсы. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. Overrides DisposableBase.Dispose(Boolean, Boolean) | Improve this Doc View Source RaiseOnDisposeEvent(Boolean, Boolean) Raises an unmanaged resource dispose event. Генерирует событие высвобождения неуправляемых ресурсов. Declaration protected void RaiseOnDisposeEvent(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. | Improve this Doc View Source TryDisposeAndResetToDefault<T>(ref T) Attempts to dispose the specified object, as well as set the value of the variable containing this object to the default value. Выполняет попытку высвободить указанный объект, а так же установить значение переменной содержащей этот объект в значение по умолчанию. Declaration public static bool TryDisposeAndResetToDefault<T>(ref T object) Parameters Type Name Description T object The object to dispose. Объект, который необходимо высвободить. Returns Type Description Boolean A value that determines whether the attempt to release the specified object was successful. Значение, определяющие удачно ли была выполнена попытка высвободить указанный объект. Type Parameters Name Description T Type of the specified object. Тип указанного объекта. Events | Improve this Doc View Source OnDispose Occurs when the object is being disposed. Возникает, когда объект высвобождается. Declaration public event Disposal OnDispose Event Type Type Description Disposal Operators | Improve this Doc View Source Implicit(Disposal to Disposable) Creates a new Disposable object initialized with specified delegate Disposal . Создает новый объект Disposable , инициализированную с помощью указанного делегата Disposal . Declaration public static implicit operator Disposable(Disposal disposal) Parameters Type Name Description Disposal disposal The Disposal delegate. Делегат Disposal . Returns Type Description Disposable | Improve this Doc View Source Implicit(Action to Disposable) Creates a new Disposable object initialized with specified delegate Action . Создает новый объект Disposable , инициализированную с помощью указанного делегата Action . Declaration public static implicit operator Disposable(Action action) Parameters Type Name Description Action action The Action delegate. Делегат Action . Returns Type Description Disposable Implements IDisposable System.IDisposable Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T) IDisposableExtensions.DisposeIfNotDisposed(IDisposable)"
  },
  "api/Platform.Disposables.Disposable-1.html": {
    "href": "api/Platform.Disposables.Disposable-1.html",
    "title": "Class Disposable<T> | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable<T> Represents disposable container that disposes contained object when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает содержащийся в нём объект при высвобождении самого контейнера. Inheritance Object DisposableBase Disposable Disposable<T> Disposable<TPrimary, TAuxiliary> Implements IDisposable IDisposable Inherited Members Disposable.OnDispose Disposable.RaiseOnDisposeEvent(Boolean, Boolean) Disposable.TryDisposeAndResetToDefault<T>(T) DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() DisposableBase.Dispose(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable<T> : Disposable, IDisposable, IDisposable Type Parameters Name Description T Constructors | Improve this Doc View Source Disposable(T) Initializes a new instance of the Disposable<T> object. Инициализирует новый экземпляр объекта Disposable<T> . Declaration public Disposable(T object) Parameters Type Name Description T object The object. Объект. | Improve this Doc View Source Disposable(T, Disposal) Initializes a new instance of the Disposable<T> object. Инициализирует новый экземпляр объекта Disposable<T> . Declaration public Disposable(T object, Disposal disposal) Parameters Type Name Description T object The object. Объект. Disposal disposal The Disposal delegate. Делегат Disposal . | Improve this Doc View Source Disposable(T, Action) Initializes a new instance of the Disposable<T> object. Инициализирует новый экземпляр объекта Disposable<T> . Declaration public Disposable(T object, Action action) Parameters Type Name Description T object The object. Объект. Action action The Action delegate. Делегат Action . | Improve this Doc View Source Disposable(T, Action<T>) Initializes a new instance of the Disposable<T> object. Инициализирует новый экземпляр объекта Disposable<T> . Declaration public Disposable(T object, Action<T> action) Parameters Type Name Description T object The object. Объект. Action <T> action The Action<T> delegate. Делегат Action<T> . Properties | Improve this Doc View Source Object Gets the object. Возвращает объект. Declaration public T Object { get; } Property Value Type Description T Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes unmanaged resources. Высвобождает неуправляемые ресурсы. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. Overrides Disposable.Dispose(Boolean, Boolean) Operators | Improve this Doc View Source Implicit(T to Disposable<T>) Creates a new Disposable<T> object initialized with specified object as Object . Создает новый объект Disposable<T> , инициализированную с помощью указанного объекта как Object . Declaration public static implicit operator Disposable<T>(T object) Parameters Type Name Description T object The object. Объект. Returns Type Description Disposable <T> | Improve this Doc View Source Implicit(Disposable<T> to T) Creates a new copy of the primary object ( Object ). Создаёт новую копию основного объекта ( Object ). Declaration public static implicit operator T(Disposable<T> disposableContainer) Parameters Type Name Description Disposable <T> disposableContainer The disposable container. Высвобождаемый контейнер. Returns Type Description T | Improve this Doc View Source Implicit((T, Disposal) to Disposable<T>) Creates a new Disposable<T> object initialized with Item1 as Object and Item2 as delegate Disposal . Создает новый объект Disposable<T> , инициализированную с помощью Item1 как Object и Item2 как делегат Disposal . Declaration public static implicit operator Disposable<T>((T, Disposal) tuple) Parameters Type Name Description ValueTuple <T, Disposal > tuple The tuple. Кортеж. Returns Type Description Disposable <T> | Improve this Doc View Source Implicit((T, Action<T>) to Disposable<T>) Creates a new Disposable<T> object initialized with Item1 as Object and Item2 as delegate Action<T> . Создает новый объект Disposable<T> , инициализированную с помощью Item1 как Object и Item2 как делегат Action<T> . Declaration public static implicit operator Disposable<T>((T, Action<T>) tuple) Parameters Type Name Description ValueTuple <T, Action <T>> tuple The tuple. Кортеж. Returns Type Description Disposable <T> | Improve this Doc View Source Implicit((T, Action) to Disposable<T>) Creates a new Disposable<T> object initialized with Item1 as Object and Item2 as delegate Action . Создает новый объект Disposable<T> , инициализированную с помощью Item1 как Object и Item2 как делегат Action . Declaration public static implicit operator Disposable<T>((T, Action) tuple) Parameters Type Name Description ValueTuple <T, Action > tuple The tuple. Кортеж. Returns Type Description Disposable <T> Implements IDisposable System.IDisposable Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T) IDisposableExtensions.DisposeIfNotDisposed(IDisposable)"
  },
  "api/Platform.Disposables.Disposable-2.html": {
    "href": "api/Platform.Disposables.Disposable-2.html",
    "title": "Class Disposable<TPrimary, TAuxiliary> | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class Disposable<TPrimary, TAuxiliary> Represents disposable container that disposes two contained objects when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает два содержащихся в нём объекта при высвобождении самого контейнера. Inheritance Object DisposableBase Disposable Disposable <TPrimary> Disposable<TPrimary, TAuxiliary> Implements IDisposable IDisposable Inherited Members Disposable<TPrimary>.Object Disposable.OnDispose Disposable.RaiseOnDisposeEvent(Boolean, Boolean) Disposable.TryDisposeAndResetToDefault<T>(T) DisposableBase.IsDisposed DisposableBase.ObjectName DisposableBase.AllowMultipleDisposeAttempts DisposableBase.AllowMultipleDisposeCalls DisposableBase.Dispose() DisposableBase.Destruct() DisposableBase.Dispose(Boolean) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public class Disposable<TPrimary, TAuxiliary> : Disposable<TPrimary>, IDisposable, IDisposable Type Parameters Name Description TPrimary The primary object type. Тип основного объекта. TAuxiliary The auxiliary object type. Тип вспомогательного объекта. Constructors | Improve this Doc View Source Disposable(TPrimary) Initializes a new instance of the Disposable<TPrimary, TAuxiliary> object. Инициализирует новый экземпляр объекта Disposable<TPrimary, TAuxiliary> . Declaration public Disposable(TPrimary object) Parameters Type Name Description TPrimary object The primary object. Основной объект. | Improve this Doc View Source Disposable(TPrimary, TAuxiliary) Initializes a new instance of the Disposable<TPrimary, TAuxiliary> object. Инициализирует новый экземпляр объекта Disposable<TPrimary, TAuxiliary> . Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject) Parameters Type Name Description TPrimary object The primary object. Основной объект. TAuxiliary auxiliaryObject The auxiliary object. Вспомогательный объект. | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Disposal) Initializes a new instance of the Disposable<TPrimary, TAuxiliary> object. Инициализирует новый экземпляр объекта Disposable<TPrimary, TAuxiliary> . Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Disposal disposal) Parameters Type Name Description TPrimary object The primary object. Основной объект. TAuxiliary auxiliaryObject The auxiliary object. Вспомогательный объект. Disposal disposal The Disposal delegate. Делегат Disposal . | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Action) Initializes a new instance of the Disposable<TPrimary, TAuxiliary> object. Инициализирует новый экземпляр объекта Disposable<TPrimary, TAuxiliary> . Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Action action) Parameters Type Name Description TPrimary object The primary object. Основной объект. TAuxiliary auxiliaryObject The auxiliary object. Вспомогательный объект. Action action The Action delegate. Делегат Action . | Improve this Doc View Source Disposable(TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>) Initializes a new instance of the Disposable<TPrimary, TAuxiliary> object. Инициализирует новый экземпляр объекта Disposable<TPrimary, TAuxiliary> . Declaration public Disposable(TPrimary object, TAuxiliary auxiliaryObject, Action<TPrimary, TAuxiliary> action) Parameters Type Name Description TPrimary object The primary object. Основной объект. TAuxiliary auxiliaryObject The auxiliary object. Вспомогательный объект. Action <TPrimary, TAuxiliary> action The Action<T1,T2> delegate. Делегат Action<T1,T2> . Properties | Improve this Doc View Source AuxiliaryObject Gets the auxiliary object. Возвращает вспомогательный объект. Declaration public TAuxiliary AuxiliaryObject { get; } Property Value Type Description TAuxiliary Methods | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes unmanaged resources. Высвобождает неуправляемые ресурсы. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. Overrides Platform.Disposables.Disposable<TPrimary>.Dispose(System.Boolean, System.Boolean) Operators | Improve this Doc View Source Implicit(Disposable<TPrimary, TAuxiliary> to TPrimary) Creates a new copy of the primary object ( Object ). Создаёт новую копию основного объекта ( Object ). Declaration public static implicit operator TPrimary(Disposable<TPrimary, TAuxiliary> disposableContainer) Parameters Type Name Description Disposable <TPrimary, TAuxiliary> disposableContainer The disposable container. Высвобождаемый контейнер. Returns Type Description TPrimary | Improve this Doc View Source Implicit(Disposable<TPrimary, TAuxiliary> to TAuxiliary) Creates a new copy of the auxiliary object ( Object ). Создаёт новую копию вспомогательного объекта ( AuxiliaryObject ). Declaration public static implicit operator TAuxiliary(Disposable<TPrimary, TAuxiliary> disposableContainer) Parameters Type Name Description Disposable <TPrimary, TAuxiliary> disposableContainer The disposable container. Высвобождаемый контейнер. Returns Type Description TAuxiliary | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Disposal) to Disposable<TPrimary, TAuxiliary>) Creates a new Disposable<TPrimary, TAuxiliary> object initialized with Item1 as Object , Item2 as AuxiliaryObject and Item3 as delegate Disposal . Создает новый объект Disposable<TPrimary, TAuxiliary> , инициализированную с помощью Item1 как Object , Item2 как AuxiliaryObject и Item3 как делегат Disposal . Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Disposal) tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Disposal > tuple The tuple. Кортеж. Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>) to Disposable<TPrimary, TAuxiliary>) Creates a new Disposable<TPrimary, TAuxiliary> object initialized with Item1 as Object , Item2 as AuxiliaryObject and Item3 as delegate Action<T1,T2> . Создает новый объект Disposable<TPrimary, TAuxiliary> , инициализированную с помощью Item1 как Object , Item2 как AuxiliaryObject и Item3 как делегат Action<T1,T2> . Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Action<TPrimary, TAuxiliary>) tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Action <TPrimary, TAuxiliary>> tuple The tuple. Кортеж. Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary, Action) to Disposable<TPrimary, TAuxiliary>) Creates a new Disposable<TPrimary, TAuxiliary> object initialized with Item1 as Object , Item2 as AuxiliaryObject and Item3 as delegate Action . Создает новый объект Disposable<TPrimary, TAuxiliary> , инициализированную с помощью Item1 как Object , Item2 как AuxiliaryObject и Item3 как делегат Action . Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary, Action) tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary, Action > tuple The tuple. Кортеж. Returns Type Description Disposable <TPrimary, TAuxiliary> | Improve this Doc View Source Implicit((TPrimary, TAuxiliary) to Disposable<TPrimary, TAuxiliary>) Creates a new Disposable<TPrimary, TAuxiliary> object initialized with Item1 as Object and Item2 as AuxiliaryObject . Создает новый объект Disposable<TPrimary, TAuxiliary> , инициализированную с помощью Item1 как Object и Item2 как AuxiliaryObject . Declaration public static implicit operator Disposable<TPrimary, TAuxiliary>((TPrimary, TAuxiliary) tuple) Parameters Type Name Description ValueTuple <TPrimary, TAuxiliary> tuple The tuple. Кортеж. Returns Type Description Disposable <TPrimary, TAuxiliary> Implements IDisposable System.IDisposable Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T) IDisposableExtensions.DisposeIfNotDisposed(IDisposable)"
  },
  "api/Platform.Disposables.DisposableBase.html": {
    "href": "api/Platform.Disposables.DisposableBase.html",
    "title": "Class DisposableBase | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class DisposableBase Represents a base implementation for IDisposable interface with the basic logic necessary to increase the likelihood of correct unmanaged resources release. Представляет базовую реализацию для интерфейса IDisposable с основной логикой необходимой для повышения вероятности корректного высвобождения неуправляемых ресурсов. Inheritance Object DisposableBase Disposable Implements IDisposable IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public abstract class DisposableBase : IDisposable, IDisposable Constructors | Improve this Doc View Source DisposableBase() Initializes a new instance of the DisposableBase class. Инициализирует новый экземпляр класса DisposableBase . Declaration protected DisposableBase() Properties | Improve this Doc View Source AllowMultipleDisposeAttempts Gets a value indicating whether multiple attempts to dispose this object are allowed. Возвращает значение определяющие разрешено ли выполнять несколько попыток высвободить этот объект. Declaration protected virtual bool AllowMultipleDisposeAttempts { get; } Property Value Type Description Boolean | Improve this Doc View Source AllowMultipleDisposeCalls Gets a value indicating whether it is allowed to call this object disposal multiple times. Возвращает значение определяющие разрешено ли несколько раз вызывать высвобождение этого объекта. Declaration protected virtual bool AllowMultipleDisposeCalls { get; } Property Value Type Description Boolean | Improve this Doc View Source IsDisposed Gets a value indicating whether the object was disposed. Возвращает значение определяющее был ли высвобожден объект. Declaration public bool IsDisposed { get; } Property Value Type Description Boolean | Improve this Doc View Source ObjectName Gets the name of an object or a unique string describing this object. Возвращает имя объекта или уникальную строку описывающую этот объект. Declaration protected virtual string ObjectName { get; } Property Value Type Description String Methods | Improve this Doc View Source Destruct() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources without throwing any exceptions. Выполняет определенные пользователем задачи, связанные с освобождением, высвобождением или сбросом неуправляемых ресурсов без выбрасывания исключений. Declaration public void Destruct() Remarks Should be called only from classes destructors, or in case exceptions should be not thrown. Должен вызываться только из деструкторов классов, или в случае, если исключения выбрасывать нельзя. | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Выполняет определенные пользователем задачи, связанные с освобождением, высвобождением или сбросом неуправляемых ресурсов. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Disposes unmanaged resources. Высвобождает неуправляемые ресурсы. Declaration protected virtual void Dispose(bool manual) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes unmanaged resources. Высвобождает неуправляемые ресурсы. Declaration protected abstract void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. | Improve this Doc View Source Finalize() Performs any necessary final clean-up when a class instance is being collected by the garbage collector. Выполняет любую необходимую окончательную очистку, когда сборщик мусора собирает экземпляр класса. Declaration protected void Finalize() Implements IDisposable System.IDisposable Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T) IDisposableExtensions.DisposeIfNotDisposed(IDisposable)"
  },
  "api/Platform.Disposables.Disposal.html": {
    "href": "api/Platform.Disposables.Disposal.html",
    "title": "Delegate Disposal | LinksPlatform's Platform.Disposables Library",
    "keywords": "Delegate Disposal Encapsulates a method that is used to dispose unmanaged resources. Инкапсулирует метод, который используется для высвобождения неуправляемых ресурсов. Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public delegate void Disposal(bool manual, bool wasDisposed); Parameters Type Name Description Boolean manual A value that determines whether the disposal was triggered manually (by the developer's code) or was executed automatically without an explicit indication from a developer. Значение определяющие было ли высвобождение вызвано вручную (кодом разработчика) или же выполнилось автоматически без явного указания со стороны разработчика. Boolean wasDisposed A value that determines whether the object was released before calling this method. Значение определяющие был ли высвобожден объект до вызова этого метода. Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T)"
  },
  "api/Platform.Disposables.EnsureExtensions.html": {
    "href": "api/Platform.Disposables.EnsureExtensions.html",
    "title": "Class EnsureExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class EnsureExtensions Provides a set of extension methods for and objects. Предоставляет набор методов расширения для объектов и . Inheritance Object EnsureExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class EnsureExtensions Methods | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable) Ensures that an object that implements the IDisposable interface has not been released. This check is performed regardless of the build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется внезависимости от конфигурации сборки. Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable) Parameters Type Name Description EnsureAlwaysExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable, String) Ensures that an object that implements the IDisposable interface has not been released. This check is performed regardless of the build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется внезависимости от конфигурации сборки. Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable, string objectName) Parameters Type Name Description EnsureAlwaysExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable String objectName The name of object. Имя объекта. | Improve this Doc View Source NotDisposed(EnsureAlwaysExtensionRoot, IDisposable, String, String) Ensures that an object that implements the IDisposable interface has not been released. This check is performed regardless of the build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется внезависимости от конфигурации сборки. Declaration public static void NotDisposed(this EnsureAlwaysExtensionRoot root, IDisposable disposable, string objectName, string message) Parameters Type Name Description EnsureAlwaysExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable String objectName The name of object. Имя объекта. String message The message of the thrown exception. Сообщение выбрасываемого исключения. | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable) Ensures that an object that implements the IDisposable interface has not been released. This check is performed only for DEBUG build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется только для конфигурации сборки DEBUG. Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable) Parameters Type Name Description EnsureOnDebugExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable, String) Ensures that an object that implements the IDisposable interface has not been released. This check is performed only for DEBUG build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется только для конфигурации сборки DEBUG. Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable, string objectName) Parameters Type Name Description EnsureOnDebugExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable String objectName The name of object. Имя объекта. | Improve this Doc View Source NotDisposed(EnsureOnDebugExtensionRoot, IDisposable, String, String) Ensures that an object that implements the IDisposable interface has not been released. This check is performed only for DEBUG build configuration. Гарантирует, что объект, реализующий интерфейс IDisposable не был высвобожден. Эта проверка выполняется только для конфигурации сборки DEBUG. Declaration [Conditional(\"DEBUG\")] public static void NotDisposed(this EnsureOnDebugExtensionRoot root, IDisposable disposable, string objectName, string message) Parameters Type Name Description EnsureOnDebugExtensionRoot root The extension root to which this method is bound. Корень-расширения, к которому привязан этот метод. IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable String objectName The name of object. Имя объекта. String message The message of the thrown exception. Сообщение выбрасываемого исключения."
  },
  "api/Platform.Disposables.GenericObjectExtensions.html": {
    "href": "api/Platform.Disposables.GenericObjectExtensions.html",
    "title": "Class GenericObjectExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class GenericObjectExtensions Provides a set of static methods that help dispose a generic objects. Предоставляет набор статических методов которые помогают высвободить универсальные объекты. Inheritance Object GenericObjectExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class GenericObjectExtensions Methods | Improve this Doc View Source DisposeIfPossible<T>(T) Attempts to dispose the specified object. Выполняет попытку высвободить указанный объект. Declaration public static void DisposeIfPossible<T>(this T object) Parameters Type Name Description T object The object to dispose. Объект, который необходимо высвободить. Type Parameters Name Description T Type of the specified object. Тип указанного объекта. | Improve this Doc View Source TryDispose<T>(T) Attempts to dispose the specified object. Выполняет попытку высвободить указанный объект. Declaration public static bool TryDispose<T>(this T object) Parameters Type Name Description T object The object to dispose. Объект, который необходимо высвободить. Returns Type Description Boolean A value that determines whether the attempt to release the specified object was successful. Значение, определяющие удачно ли была выполнена попытка высвободить указанный объект. Type Parameters Name Description T Type of the specified object. Тип указанного объекта."
  },
  "api/Platform.Disposables.html": {
    "href": "api/Platform.Disposables.html",
    "title": "Namespace Platform.Disposables | LinksPlatform's Platform.Disposables Library",
    "keywords": "Namespace Platform.Disposables Classes Disposable Represents disposable object that contains OnDispose event which is raised when the object itself is disposed. Представляет высвобождаемый объект, который содержит событие OnDispose, которое возникает при высвобождении самого объекта. Disposable<T> Represents disposable container that disposes contained object when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает содержащийся в нём объект при высвобождении самого контейнера. Disposable<TPrimary, TAuxiliary> Represents disposable container that disposes two contained objects when the container itself is disposed. Представляет высвобождаемый контейнер, который высвобождает два содержащихся в нём объекта при высвобождении самого контейнера. DisposableBase Represents a base implementation for IDisposable interface with the basic logic necessary to increase the likelihood of correct unmanaged resources release. Представляет базовую реализацию для интерфейса IDisposable с основной логикой необходимой для повышения вероятности корректного высвобождения неуправляемых ресурсов. EnsureExtensions Provides a set of extension methods for and objects. Предоставляет набор методов расширения для объектов и . GenericObjectExtensions Provides a set of static methods that help dispose a generic objects. Предоставляет набор статических методов которые помогают высвободить универсальные объекты. IDisposableExtensions Provides a set of extension methods for IDisposable objects. Предоставляет набор методов расширения для объектов IDisposable . Interfaces IDisposable Представляет расширенный интерфейс IDisposable . Represents an extended IDisposable interface. Delegates Disposal Encapsulates a method that is used to dispose unmanaged resources. Инкапсулирует метод, который используется для высвобождения неуправляемых ресурсов."
  },
  "api/Platform.Disposables.IDisposable.html": {
    "href": "api/Platform.Disposables.IDisposable.html",
    "title": "Interface IDisposable | LinksPlatform's Platform.Disposables Library",
    "keywords": "Interface IDisposable Представляет расширенный интерфейс IDisposable . Represents an extended IDisposable interface. Inherited Members IDisposable.Dispose() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public interface IDisposable : IDisposable Properties | Improve this Doc View Source IsDisposed Gets a value indicating whether the object was disposed. Возвращает значение определяющее был ли высвобожден объект. Declaration bool IsDisposed { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Destruct() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources without throwing any exceptions. Выполняет определенные пользователем задачи, связанные с освобождением, высвобождением или сбросом неуправляемых ресурсов без выбрасывания исключений. Declaration void Destruct() Remarks Should be called only from classes destructors, or in case exceptions should be not thrown. Должен вызываться только из деструкторов классов, или в случае, если исключения выбрасывать нельзя. Extension Methods GenericObjectExtensions.TryDispose<T>(T) GenericObjectExtensions.DisposeIfPossible<T>(T) IDisposableExtensions.DisposeIfNotDisposed(IDisposable)"
  },
  "api/Platform.Disposables.IDisposableExtensions.html": {
    "href": "api/Platform.Disposables.IDisposableExtensions.html",
    "title": "Class IDisposableExtensions | LinksPlatform's Platform.Disposables Library",
    "keywords": "Class IDisposableExtensions Provides a set of extension methods for IDisposable objects. Предоставляет набор методов расширения для объектов IDisposable . Inheritance Object IDisposableExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Disposables Assembly : Platform.Disposables.dll Syntax public static class IDisposableExtensions Methods | Improve this Doc View Source DisposeIfNotDisposed(IDisposable) Attempts to dispose the specified object. Выполняет попытку высвободить указанный объект. Declaration public static void DisposeIfNotDisposed(this IDisposable disposable) Parameters Type Name Description IDisposable disposable The object implementing the IDisposable interface. Объект, реализующий интерфейс IDisposable"
  },
  "README.html": {
    "href": "README.html",
    "title": "Disposables (русская версия) | LinksPlatform's Platform.Disposables Library",
    "keywords": "Disposables ( русская версия ) This library helps to make objects disposable in a fast, short, easy and safe way. Platform.Disposables.DisposableBase abstract class tries to dispose the object at both on instance destruction and OnProcessExit whatever comes first even if Dispose method was not called anywhere by user. And takes care your disposal logic executes only once by default, and if you really need it, you can allow multiple calls and attempts to dispose, by overriding corresponding properties. The Platform.Disposables.IDisposable interface extends the System.IDisposable with IsDisposed property and Destruct method. The Destruct method is designed to never throw exceptions, that makes it safe to use in class destructors. All ignored exceptions are available at Platform.Disposables.IgnoredDisposables if you need to debug them. Namespace: Platform.Disposables Forked from: Konard/LinksPlatform/Platform/Platform.Helpers/Disposables Package at NuGet: Platform.Disposables Examples If you can use inheritance in your class. For example if you don't have other base class inherited. using Platform.Disposables; namespace Examples { public class DisposableBaseUsageExample : DisposableBase { protected override void Dispose(bool manual, bool wasDisposed) { // Put tour dispose logic in thise method if (!wasDisposed) { // First call from Dispose or Destructor } else { // (IsDisposed == true) here, Dispose called twise, or Dispose and Destructor were called if (manual) { // Call from IDisposable.Dispose() } else { // Call from Destructor } } } } } If you cannot use inheritance in your class. For example if you have other base class inherited. using Platform.Disposables; namespace Examples { public class DisposableUsageExample : System.IDisposable { private readonly Disposable _disposable; public DisposableUsageExample() => _disposable = new Disposable(Disposed); public void Dispose() => _disposable.Dispose(); ~DisposableUsageExample() => _disposable.Destruct(); private void Disposed(bool manual, bool wasDisposed) { // Dispose logic } } } If you do not have access to the internal structure of the object's class. You can use a disposable object container. The container is convertible back to the passed object at any time. using Platform.Disposables; namespace Examples { public class Examples { public static void UseAndDispose() { var array = new int[] { 1, 2, 3 }; Disposable<int[]> disposableArray = (array, () => array = null); WorkWithObjectAndDispose(disposableArray); // Here array == null } private static void WorkWithObjectAndDispose(Disposable<int[]> disposableArray) { using (disposableArray) { int[] array = disposableArray; // Use your object here } // Here there is call to () => array = null } } } Documentation Interface IDisposable . Abstract class DisposableBase . Class Disposable . Class Disposable<T> . PDF file with code for e-readers. Depend on Platform.Exceptions Dependent libraries Platform.Collections"
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "Disposables (english version) | LinksPlatform's Platform.Disposables Library",
    "keywords": "Disposables ( english version ) Эта библиотека помогает сделать объекты высвобождаемыми быстрым, коротким, простым и безопасным способом. Абстрактный класс Platform.Disposables.DisposableBase пытается удалить объект, даже если метод Dispose нигде не вызывался пользователем, либо при вызове деструктора экземпляра, либо при возникновении события OnProcessExit , в зависимости от того, что произойдет раньше. И позаботится о том, чтобы логика удаления по умолчанию выполнялась только один раз, но, если она вам действительно нужна, вы можете разрешить несколько вызовов и попыток удаления, переопределив соответствующие свойства. Интерфейс Platform.Disposables.IDisposable расширяет System.IDisposable добавляя свойство IsDisposed и метод Destruct . Метод Destruct предназначен для того, чтобы не генерировать исключения, что делает его безопасным для использования в деструкторах классов. Все игнорируемые исключения доступны в Platform.Disposables.IgnoredDisposables , если вам нужно их отладить. Пространство имён: Platform.Disposables Ответвление от: Konard/LinksPlatform/Platform/Platform.Helpers/Disposables Пакет в NuGet: Platform.Disposables Примеры Если вы можете использовать наследование в вашем классе. Например, если у вас нет другого наследуемого базового класса. using Platform.Disposables; namespace Examples { public class DisposableBaseUsageExample : DisposableBase { protected override void Dispose(bool manual, bool wasDisposed) { // Логика высвобождения } } } Если вы не можете использовать наследование в вашем классе. Например, если у вас есть другой базовый класс от которого унаследован ваш класс. using Platform.Disposables; namespace Examples { public class DisposableUsageExample : System.IDisposable { private readonly Disposable _disposable; public DisposableUsageExample() => _disposable = new Disposable(Disposed); public void Dispose() => _disposable.Dispose(); ~DisposableUsageExample() => _disposable.Destruct(); private void Disposed(bool manual, bool wasDisposed) { // Логика высвобождения } } } Если у вас нет доступа к внутренней структуре класса объекта. Вы можете использовать высвобождаемый контейнер для вашего объекта. Контейнер может быть преобразован обратно в переданный объект в любое время. using Platform.Disposables; namespace Examples { public class Examples { public static void UseAndDispose() { var array = new int[] { 1, 2, 3 }; Disposable<int[]> disposableArray = (array, () => array = null); WorkWithObjectAndDispose(disposableArray); // Здесь array == null } private static void WorkWithObjectAndDispose(Disposable<int[]> disposableArray) { using (disposableArray) { int[] array = disposableArray; // Используйте ваш объект здесь } // Здесь вызывается () => array = null } } } Документация Интерфейс IDisposable . Абстрактный класс DisposableBase . Класс Disposable . Класс Disposable<T> . PDF файл с кодом для электронных книг. Зависит от Platform.Disposables Зависимые библиотеки Platform.Collections"
  }
}